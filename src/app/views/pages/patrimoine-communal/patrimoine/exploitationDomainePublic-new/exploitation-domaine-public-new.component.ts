import { Component, OnInit } from "@angular/core";
import { FormBuilder, FormGroup, Validators } from "@angular/forms";
import { ActivatedRoute, Router } from "@angular/router";
import { BienscommunalService } from "../../services/bienscommunal.service";

@Component({
	selector: "kt-beneficiaire-new",
	templateUrl: "./exploitation-domaine-public-new.component.html",
	styleUrls: ["./exploitation-domaine-public-new.component.scss"],
})
export class ExploitationDomainePublicNewComponent implements OnInit {
	loading = false;
	exploitationDomainePublicForm: FormGroup;
	id: number;
	constructor(
		private service: BienscommunalService,
		private route: ActivatedRoute,
		private router: Router,
		private fb: FormBuilder
	) {

	}

	ngOnInit() {
		this.exploitationDomainePublicForm = this.fb.group({
			typeExploiataion: ["", Validators.required],
			nom: ["", Validators.compose([Validators.required])],
			prenom: ["", Validators.required],
			cin: [null, Validators.required],
			adresse: [null],
			observation: [null],
			zoneOperationnelle: [null],
			nbrDecisionExploitation: [null],
			dateInitiation: [null],
			montantExp: [null],
			dateFinExp: [null],
			contenu: [null],
			zoneConstruite: [null],
			idpatrimoine: [null]
		});
		this.route.queryParams.subscribe((params) => {
			this.id = params["id"];
		});

		console.log("id patrimoine: " + this.id);
		this.exploitationDomainePublicForm.get('idpatrimoine').setValue( this.id)
	}

	get f() {
		return this.exploitationDomainePublicForm
			? this.exploitationDomainePublicForm.controls
			: null;
	}

	onSubmit() {
		const formValues = this.exploitationDomainePublicForm.value;
		const controls = this.exploitationDomainePublicForm.controls;
		/** check form */
		if (this.exploitationDomainePublicForm.invalid) {
			Object.keys(controls).forEach((controlName) =>
				controls[controlName].markAsTouched()
			);
			return;
		}
		this.loading = true;
	
		const beneficiaire: any = Object.assign({}, formValues);
	//	beneficiaire.idpatrimoine = this.id;
		console.log(beneficiaire.idpatrimoine);

		this.service.saveBeneficiaire(beneficiaire).subscribe(	(data) => {
				this.router.navigate(["beneficiaire/beneficiaire-index/"]);
			},
			(error) => console.log(error)
		);
	}

	back() {
		this.router.navigate(["beneficiaire/beneficiaire-index"]);
	}

	/**
	 * Checking control validation
	 *
	 * @param controlName: string => Equals to formControlName
	 * @param validationType: string => Equals to valitors name
	 */
	isControlHasError(controlName: string, validationType: string): boolean {
		const control =
			this.exploitationDomainePublicForm.controls[controlName];
		if (!control) {
			return false;
		}

		const result =
			control.hasError(validationType) &&
			(control.dirty || control.touched);
		return result;
	}
}
